WARNING VIOLATIONS:
CloudFront Distribution should enable access logging
Elastic Load Balancer should have access logging configured
Elastic Load Balancer should have access logging enabled
IAM managed policy should not allow * resource
IAM managed policy should not allow Allow+NotAction
IAM managed policy should not allow Allow+NotResource
IAM policy should not allow * resource
IAM policy should not allow Allow+NotAction
IAM policy should not allow Allow+NotResource
IAM role should not allow * resource on its permissions policy
IAM role should not allow Allow+NotAction
IAM role should not allow Allow+NotAction on trust permissinos
IAM role should not allow Allow+NotResource
Lambda permission beside InvokeFunction might not be what you want?  Not sure!?
S3 Bucket likely should not have a public read acl
S3 Bucket policy should not allow Allow+NotAction
SNS Topic policy should not allow Allow+NotAction
SQS Queue policy should not allow Allow+NotAction
Security Group Standalone Egress found with cidr open to world.
Security Group Standalone Ingress cidr found that is not /32
Security Group Standalone Ingress found with cidr open to world. This should never be true on instance.  Permissible on ELB
Security Group egress with port range instead of just a single port
Security Group ingress with port range instead of just a single port
Security Groups found egress with port range instead of just a single port
Security Groups found ingress with port range instead of just a single port
Security Groups found with cidr open to world on egress
Security Groups found with cidr open to world on egress array
Security Groups found with cidr open to world on ingress array.  This should never be true on instance.  Permissible on ELB
Security Groups found with cidr open to world on ingress.  This should never be true on instance.  Permissible on ELB
Security Groups found with cidr that is not /32
Specifying credentials in the template itself is probably not the safest thing

FAILING VIOLATIONS:
A Cloudformation template must have at least 1 resource
AWS::EC2::SecurityGroup must have Properties
AWS::EC2::SecurityGroupEgress must have Properties
AWS::EC2::SecurityGroupEgress must not have GroupName - EC2 classic is a no-go!
AWS::EC2::SecurityGroupIngress must have Properties
AWS::EC2::SecurityGroupIngress must not have GroupName - EC2 classic is a no-go!
AWS::IAM::ManagedPolicy must have Properties
AWS::IAM::Policy must have Properties
AWS::IAM::Role must have Properties
AWS::IAM::UserToGroupAddition must have Properties
AWS::S3::BucketPolicy must have Properties
AWS::SNS::TopicPolicy must have Properties
AWS::SQS::QueuePolicy must have Properties
All Ref and Fn::GetAtt must reference existing logical resource ids
EBS volume should have server-side encryption enabled
IAM managed policy should not allow * action
IAM managed policy should not apply directly to users.  Should be on group
IAM policy should not allow * action
IAM policy should not apply directly to users.  Should be on group
IAM role should not allow * action on its permissions policy
IAM role should not allow * action on its trust policy
IAM role should not allow Allow+NotPrincipal in its trust policy
IAM user should not have any directly attached policies.  Should be on group
It appears that the S3 Bucket Policy allows s3:PutObject without server-side encryption
Lambda permission principal should not be wildcard
Missing egress rule means all traffic is allowed outbound.  Make this explicit if it is desired configuration
S3 Bucket policy should not allow * AWS principal
S3 Bucket policy should not allow * action
S3 Bucket policy should not allow * principal
S3 Bucket policy should not allow Allow+NotPrincipal
S3 Bucket should not have a public read-write acl
SNS Topic policy should not allow Allow+NotPrincipal
SNS topic policy should not allow * AWS principal
SNS topic policy should not allow * principal
SQS Queue policy should not allow * action
SQS Queue policy should not allow * principal
SQS Queue policy should not allow Allow+NotPrincipal
User is not assigned to a group
